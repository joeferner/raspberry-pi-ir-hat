--- Core/Src/main.c.orig	2020-10-25 08:51:46.876677806 -0400
+++ Core/Src/main.c	2020-10-25 09:09:52.328213023 -0400
@@ -32,6 +32,9 @@
 
 /* Private define ------------------------------------------------------------*/
 /* USER CODE BEGIN PD */
+extern void setup();
+extern void loop();
+extern void main_error_handler();
 /* USER CODE END PD */
 
 /* Private macro -------------------------------------------------------------*/
@@ -103,13 +106,14 @@
   MX_USART1_UART_Init();
   MX_USART2_UART_Init();
   /* USER CODE BEGIN 2 */
-
+  setup();
   /* USER CODE END 2 */
 
   /* Infinite loop */
   /* USER CODE BEGIN WHILE */
   while (1)
   {
+    loop();
     /* USER CODE END WHILE */
 
     /* USER CODE BEGIN 3 */
@@ -399,7 +403,7 @@
 {
   /* USER CODE BEGIN Error_Handler_Debug */
   /* User can add his own implementation to report the HAL error return state */
-
+  main_error_handler();
   /* USER CODE END Error_Handler_Debug */
 }
 
--- Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c.orig	2020-10-25 09:16:15.638393437 -0400
+++ Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c	2020-10-25 09:10:40.112415038 -0400
@@ -3227,6 +3227,8 @@
 
     /* Enable the UART Transmit Complete Interrupt */
     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
+
+    HAL_UART_TxCpltCallback(huart);
   }
   /* DMA Circular mode */
   else
